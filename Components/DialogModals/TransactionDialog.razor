@using MyPocketTrack.Components.Models
@inject Services.TransactionService transactionService
@inject ISnackbar Snackbar

<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 600px; overflow-y: auto">
            <MudTabs Elevation="0" Color="Color.Primary" Rounded="true" ApplyEffectsToContainer="true"
                     @bind-ActivePanelIndex="activeTabIndex" _ActivePanelIndexChanged="HandleTabChange">
                <!-- Inflow Transaction Tab -->
                <MudTabPanel Text="Inflow" Icon="@Icons.Material.Filled.TrendingUp">
                    <EditForm Model="@inflowTransaction" OnValidSubmit="() => HandleSubmit(TransactionsStatus.Inflow)">
                        <DataAnnotationsValidator/>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="inflowTransaction.Amount"
                                              Label="Income Amount"
                                              Required="true"
                                              Adornment="Adornment.Start"
                                              AdornmentText="$"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="inflowTransaction.Source"
                                              Label="Income Source"
                                              Required="true"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudSelect T="string" Label="Income Category"
                                           MultiSelection="true"
                                           @bind-SelectedValues="inflowSelectedTags">
                                    @foreach (var tag in InflowTags)
                                    {
                                        <MudSelectItem Value="@tag">@tag</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudItem>

                            @CommonFields(inflowTransaction, inflowSelectedDate)
                        </MudGrid>
                    </EditForm>
                </MudTabPanel>

                <!-- Outflow Transaction Tab -->
                <MudTabPanel Text="Outflow" Icon="@Icons.Material.Filled.TrendingDown">
                    <EditForm Model="@outflowTransaction" OnValidSubmit="() => HandleSubmit(TransactionsStatus.Outflow)">
                        <DataAnnotationsValidator/>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="outflowTransaction.Amount"
                                              Label="Expense Amount"
                                              Required="true"
                                              Adornment="Adornment.Start"
                                              AdornmentText="$"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="outflowTransaction.Source"
                                              Label="Expense Category"
                                              Required="true"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudSelect T="string" Label="Expense Tags"
                                           MultiSelection="true"
                                           @bind-SelectedValues="outflowSelectedTags">
                                    @foreach (var tag in OutflowTags)
                                    {
                                        <MudSelectItem Value="@tag">@tag</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudItem>

                            @CommonFields(outflowTransaction, outflowSelectedDate)
                        </MudGrid>
                    </EditForm>
                </MudTabPanel>

                <!-- Debt Transaction Tab -->
                <MudTabPanel Text="Debt" Icon="@Icons.Material.Filled.Receipt">
                    <EditForm Model="@debtTransaction" OnValidSubmit="() => HandleSubmit(TransactionsStatus.Debt)">
                        <DataAnnotationsValidator/>
                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="debtTransaction.Amount"
                                              Label="Debt Amount"
                                              Required="true"
                                              Adornment="Adornment.Start"
                                              AdornmentText="$"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="debtTransaction.Source"
                                              Label="Creditor/Lender"
                                              Required="true"/>
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudDatePicker @bind-Date="debtDueDate"
                                               Label="Due Date"
                                               Required="true"/>
                            </MudItem>

                            <MudItem xs="12">
                                <MudSelect T="string" Label="Debt Type"
                                           MultiSelection="true"
                                           @bind-SelectedValues="debtSelectedTags">
                                    @foreach (var tag in DebtTags)
                                    {
                                        <MudSelectItem Value="@tag">@tag</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudItem>

                            @CommonFields(debtTransaction, debtSelectedDate)
                        </MudGrid>
                    </EditForm>
                </MudTabPanel>
            </MudTabs>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="SubmitCurrentForm">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    private int activeTabIndex = 0;

// Separate models for each transaction type
    private Transaction inflowTransaction = new() { Date = DateTime.Today };
    private Transaction outflowTransaction = new() { Date = DateTime.Today };
    private Transaction debtTransaction = new() { Date = DateTime.Today };

// Separate collections for selected tags
    private IEnumerable<string> inflowSelectedTags = new List<string>();
    private IEnumerable<string> outflowSelectedTags = new List<string>();
    private IEnumerable<string> debtSelectedTags = new List<string>();

// Separate date fields
    private DateTime? inflowSelectedDate = DateTime.Today;
    private DateTime? outflowSelectedDate = DateTime.Today;
    private DateTime? debtSelectedDate = DateTime.Today;
    private DateTime? debtDueDate;

// Predefined tags for each transaction type
    private List<string> InflowTags = new()
    {
        "Salary",
        "Investment",
        "Bonus",
        "Refund",
        "Side Income"
    };

    private List<string> OutflowTags = new()
    {
        "Housing",
        "Food",
        "Transportation",
        "Bills",
        "Entertainment",
        "Shopping"
    };

    private List<string> DebtTags = new()
    {
        "Loan",
        "Credit Card",
        "Mortgage",
        "Personal Debt",
        "Student Loan"
    };

// Common fields template shared across all transaction types
    private RenderFragment CommonFields(Transaction transaction, DateTime? selectedDate) => __builder =>
    {
        <MudItem xs="12">
            <MudTextField @bind-Value="transaction.Description"
                          Label="Description"
                          Required="true"
                          Lines="2"/>
        </MudItem>

        <MudItem xs="12" md="6">
            <MudDatePicker @bind-Date="selectedDate"
                           Label="Transaction Date"
                           Required="true"/>
        </MudItem>

        <MudItem xs="12">
            <MudTextField @bind-Value="transaction.Notes"
                          Label="Notes"
                          Lines="2"/>
        </MudItem>
    };

    protected override void OnInitialized()
    {
        if (MudDialog is null)
            throw new Exception("MudDialog instance not found");

// Initialize all transaction models
        InitializeTransactions();
    }

    private void InitializeTransactions()
    {
        inflowTransaction = new() { Date = DateTime.Today, Type = TransactionsStatus.Inflow };
        outflowTransaction = new() { Date = DateTime.Today, Type = TransactionsStatus.Outflow };
        debtTransaction = new() { Date = DateTime.Today, Type = TransactionsStatus.Debt };
        
        inflowSelectedTags = new List<string>();
        outflowSelectedTags = new List<string>();
        debtSelectedTags = new List<string>();

        inflowSelectedDate = DateTime.Today;
        outflowSelectedDate = DateTime.Today;
        debtSelectedDate = DateTime.Today;
        debtDueDate = null;
    }

    private void HandleTabChange(int index)
    {
        activeTabIndex = index;
    }

    private async Task HandleSubmit(TransactionsStatus type)
    {
        Transaction currentTransaction;
        DateTime? currentDate;
        IEnumerable<string> currentTags;

        switch (type)
        {
            case TransactionsStatus.Inflow:
                currentTransaction = inflowTransaction;
                currentDate = inflowSelectedDate;
                currentTags = inflowSelectedTags;
                break;
            case TransactionsStatus.Outflow:
                currentTransaction = outflowTransaction;
                currentDate = outflowSelectedDate;
                currentTags = outflowSelectedTags;
                break;
            default:
                currentTransaction = debtTransaction;
                currentDate = debtSelectedDate;
                currentTags = debtSelectedTags;
                break;
        }

        if (!currentDate.HasValue)
        {
            Snackbar.Add("Transaction date is required.", Severity.Error);
            return;
        }

        currentTransaction.Date = currentDate.Value;
        currentTransaction.Type = type;

        if (currentTransaction.Type == TransactionsStatus.Debt)
        {
            currentTransaction.DebtTakenDate = DateTime.Today;
            currentTransaction.DebtDueDate = debtDueDate;
            if (!debtDueDate.HasValue)
            {
                Snackbar.Add("Due date is required for debt transactions.", Severity.Error);
                return;
            }

            Console.WriteLine(currentTransaction.GetType());
        }

        currentTransaction.Tags = currentTags.ToList();
        MudDialog.Close(DialogResult.Ok(currentTransaction));
    }

    private void SubmitCurrentForm()
    {
        switch (activeTabIndex)
        {
            case 0:
                HandleSubmit(TransactionsStatus.Inflow);
                break;
            case 1:
                HandleSubmit(TransactionsStatus.Outflow);
                break;
            case 2:
                HandleSubmit(TransactionsStatus.Debt);
                break;
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

}



@* <MudDialog DisableSidePadding="true"> *@
@*     <DialogContent> *@
@*         <MudContainer Style="max-height: 600px; overflow-y: auto"> *@
@*             <EditForm Model="@transaction" OnValidSubmit="HandleSubmit"> *@
@*                 <DataAnnotationsValidator/> *@
@*                 <MudGrid> *@
@*                     <!-- Amount --> *@
@*                     <MudItem xs="12" md="6"> *@
@*                         <MudTextField @bind-Value="transaction.Amount" *@
@*                                     Label="Amount" *@
@*                                     Required="true" *@
@*                                     Adornment="Adornment.Start" *@
@*                                     AdornmentText="$"/> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Type --> *@
@*                     <MudItem xs="12" md="6"> *@
@*                         <MudSelect T="TransactionType" @bind-Value="transaction.Type" *@
@*                                  Label="Type" Required="true"> *@
@*                             <MudSelectItem Value="@TransactionType.Inflow">Inflow</MudSelectItem> *@
@*                             <MudSelectItem Value="@TransactionType.Outflow">Outflow</MudSelectItem> *@
@*                         </MudSelect> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Source --> *@
@*                     <MudItem xs="12"> *@
@*                         <MudTextField @bind-Value="transaction.Source" *@
@*                                     Label="Source" *@
@*                                     Required="true"/> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Description --> *@
@*                     <MudItem xs="12"> *@
@*                         <MudTextField @bind-Value="transaction.Description" *@
@*                                     Label="Description" *@
@*                                     Required="true" *@
@*                                     Lines="2"/> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Date --> *@
@*                     <MudItem xs="12" md="6"> *@
@*                         <MudDatePicker @bind-Date="selectedDate" *@
@*                                      Label="Date" *@
@*                                      Required="true"/> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Notes --> *@
@*                     <MudItem xs="12"> *@
@*                         <MudTextField @bind-Value="transaction.Notes" *@
@*                                     Label="Notes" *@
@*                                     Lines="2"/> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Tags --> *@
@*                     <MudItem xs="12"> *@
@*                         <MudSelect T="string" Label="Tags" *@
@*                                  MultiSelection="true" *@
@*                                  @bind-SelectedValues="selectedTags"> *@
@*                             @foreach (var tag in PredefinedTags) *@
@*                             { *@
@*                                 <MudSelectItem Value="@tag">@tag</MudSelectItem> *@
@*                             } *@
@*                         </MudSelect> *@
@*                     </MudItem> *@
@* *@
@*                     <!-- Is Debt --> *@
@*                     <MudItem xs="12"> *@
@*                         <MudButton OnClick="ConvertDebtStatus"  *@
@*                                  Color="Color.Primary" *@
@*                                  Variant="@(isDebtSelected ? Variant.Filled : Variant.Outlined)"> *@
@*                             Is Debt? *@
@*                         </MudButton> *@
@*                     </MudItem> *@
@* *@
@*                     @if (isDebtSelected) *@
@*                     { *@
@*                         <!-- Debt Due Date --> *@
@*                         <MudItem xs="12" md="6"> *@
@*                             <MudDatePicker @bind-Date="selectedDebtDueDate" *@
@*                                          Label="Debt Due Date" *@
@*                                          Required="true"/> *@
@*                         </MudItem> *@
@*                     } *@
@*                 </MudGrid> *@
@*             </EditForm> *@
@*         </MudContainer> *@
@*     </DialogContent> *@
@*     <DialogActions> *@
@*         <MudButton OnClick="Cancel">Cancel</MudButton> *@
@*         <MudButton Color="Color.Primary" OnClick="HandleSubmit">Save</MudButton> *@
@*     </DialogActions> *@
@* </MudDialog> *@
@* *@
@* @code { *@
@*     [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!; *@
@* *@
@*     private Transaction transaction = new() { Date = DateTime.Today }; *@
@*     private IEnumerable<string> selectedTags = new List<string>(); *@
@*     private bool isDebtSelected = false; *@
@*     private DateTime? selectedDate = DateTime.Today; *@
@*     private DateTime? selectedDebtDueDate; *@
@* *@
@*     public List<string> PredefinedTags { get; } = new() *@
@*     { *@
@*         "Income", *@
@*         "Housing", *@
@*         "Food", *@
@*         "Savings", *@
@*         "Shopping", *@
@*         "Bills", *@
@*         "Entertainment" *@
@*     }; *@
@* *@
@*      *@
@*     protected override void OnInitialized() *@
@*     { *@
@*         if (MudDialog is null) *@
@*             throw new Exception("MudDialog instance not found"); *@
@*     } *@
@*      *@
@*     private void ConvertDebtStatus() *@
@*     { *@
@*         isDebtSelected = !isDebtSelected; *@
@*         if (!isDebtSelected) *@
@*         { *@
@*             selectedDebtDueDate = null; *@
@*             transaction.DebtDueDate = null; *@
@*             transaction.IsDebt = false; *@
@*         } *@
@*         else *@
@*         { *@
@*             transaction.IsDebt = true; *@
@*         } *@
@*     } *@
@* *@
@*     private async Task HandleSubmit() *@
@*     { *@
@*         if (!selectedDate.HasValue) *@
@*         { *@
@*             Snackbar.Add("Transaction date is required.", Severity.Error); *@
@*             return; *@
@*         } *@
@* *@
@*         transaction.Date = selectedDate.Value; *@
@* *@
@*         if (isDebtSelected) *@
@*         { *@
@*             if (!selectedDebtDueDate.HasValue) *@
@*             { *@
@*                 Snackbar.Add("Due dates are required for debt transactions.", Severity.Error); *@
@*                 return; *@
@*             } *@
@* *@
@*             transaction.DebtDueDate = selectedDebtDueDate; *@
@*         } *@
@* *@
@*         transaction.Tags = selectedTags.ToList(); *@
@*         MudDialog.Close(DialogResult.Ok(transaction)); *@
@*     } *@
@* *@
@*     private void Cancel() => MudDialog.Cancel(); *@
@* } *@
@* *@